---
- name: Set zfs_pool_name to empty if ZFS pool not defined
  set_fact:
    zfs_pool_name: ""
  when: zfs_pool_name is not defined and docker_zfs_pool is not defined

- import_tasks: install-RedHat.yml
  when: ansible_os_family == 'RedHat'
  static: no

- import_tasks: install-Debian.yml
  when: ansible_os_family == 'Debian'
  static: no

- name: Flush ZFS Handlers
  meta: flush_handlers

- name: Check zpool {{ zfs_pool_name }} exists
  command: "zpool list {{ zfs_pool_name }}"
  register: zpool_exist
  changed_when: false
  ignore_errors: true

- name: Try importing {{ zfs_pool_name }}
  command: "zpool import {{ zfs_pool_name }}"
  changed_when: false
  ignore_errors: true
  when: zpool_exist.failed

- name: Check zpool {{ zfs_pool_name }} exists
  command: "zpool list {{ zfs_pool_name }}"
  register: zpool_exist_again
  changed_when: false
  ignore_errors: true

- name: Create {{ zfs_pool_name }} zpool
  notify:
   - Start zfs
  command: /sbin/zpool create -f {{ zfs_pool_name }} mirror "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_{{ zfs_disk_1[0:20] }}" "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_{{ zfs_disk_2[0:20] }}"
  args:
    creates: "/{{ zfs_pool_name }}"
  when: zpool_exist_again.failed ==  true and zfs_disk_1 != "" and zfs_disk_2 != "" and zfs_pool_name != ""

- name: Create ZFS containers
  command: "/sbin/zfs create {{ zfs_pool_name }}/{{ item }}"
  args:
    creates: "/{{ zfs_pool_name }}/{{ item }}"
  with_items: "{{ zfs_containers }}"
  when: zfs_disk_1 != "" and zfs_disk_2 != "" and zfs_pool_name != ""
