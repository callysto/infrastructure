---
- name: Unarchive custom IBL python modules
  unarchive:
    src: ibl_python_pkgs.tar.gz
    dest: /tmp/
    creates: /tmp/ibl_python_pkgs

- name: Install custom IBL python modules
  shell: "cp -a /tmp/ibl_python_pkgs/* /edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages/"
  args:
    creates: /edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages/ibl_catalog_app
  register: install_ibl_modules

- name: Manage permissions on IBL python modules
  file:
    path: "/edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages/"
    state: "directory"
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"
    recurse: True

- name: Unarchive custom IBL theme
  unarchive:
    src: iblx-themes.tar.gz
    dest: "{{ edxapp_code_dir }}/themes/"
    creates: "{{ edxapp_code_dir }}/themes/iblx"

- name: Manage permissions on IBL theme
  file:
    path: "{{ edxapp_code_dir }}/themes/iblx"
    state: "directory"
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"
    recurse: True

- name: Symlink themes
  file:
    src: /edx/app/edxapp/edx-platform/themes
    dest: /edx/var/edxapp/staticfiles/themes
    state: link
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"

- name: Symlink iblx-lms static files
  file:
    src: /edx/app/edxapp/edx-platform/themes/iblx/lms/static/
    dest: /edx/var/edxapp/staticfiles/iblx-lms
    state: link
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"

#- name: Manage xblock_jupyter_graded Django module
#  shell: "{{ edxapp_venv_bin }}/python ./manage.py cms migrate xblock_jupyter_graded --settings={{ edxapp_settings }}"
#  args:
#    chdir: "{{ edxapp_code_dir }}"
#  become_user: "{{ common_web_user }}"
#  with_items: "{{ edx_users }}"
#  register: xblock_jupyter_graded_migrate
#  tags:
#    - install
#    - install:base

- name: Manage activation email file
  copy:
    src: activation_email.txt
    dest: /edx/app/edxapp/edx-platform/lms/templates/emails/activation_email.txt
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"
    mode: "0644"
  register: activation_email

- name: Manage CMS django common file
  copy:
    src: cms.django.common.py
    dest: /edx/app/edxapp/edx-platform/cms/envs/common.py
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"
    mode: "0644"
  register: cms_django_common

- name: Manage CMS django urls file
  copy:
    src: cms.django.urls.py
    dest: /edx/app/edxapp/edx-platform/cms/envs/urls.py
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"
    mode: "0644"
  register: cms_django_urls

- name: Manage LMS django common file
  copy:
    src: lms.django.common.py
    dest: /edx/app/edxapp/edx-platform/lms/envs/common.py
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"
    mode: "0644"
  register: lms_django_common

- name: Manage LMS django urls file
  copy:
    src: lms.django.urls.py
    dest: /edx/app/edxapp/edx-platform/lms/envs/urls.py
    owner: "{{ edxapp_user }}"
    group: "{{ edxapp_user }}"
    mode: "0644"
  register: lms_django_urls

- name: Run db migrations again
  command: "{{ COMMON_BIN_DIR }}/edxapp-migrate-{{ item }}"
  when: migrate_db is defined and migrate_db|lower == "yes" and COMMON_MYSQL_MIGRATE_PASS and item != "lms-preview"
  run_once: yes
  environment:
    DB_MIGRATION_USER: "{{ COMMON_MYSQL_MIGRATE_USER }}"
    DB_MIGRATION_PASS: "{{ COMMON_MYSQL_MIGRATE_PASS }}"
  with_items: "{{ service_variants_enabled }}"
  register: edx_db_migrations
  tags:
    - migrate

- name: reindex all courses
  shell: "{{ edxapp_venv_bin }}/python ./manage.py cms reindex_course --setup --settings={{ edxapp_settings }}"
  args:
    chdir: "{{ edxapp_code_dir }}"
  become_user: "{{ common_web_user }}"
  when: EDXAPP_REINDEX_ALL_COURSES
  tags:
    - install
    - install:base

#- name: "FIX: enable {{ item }} supervisor script"
#  file:
#    src: "{{ supervisor_available_dir }}/{{ item }}.conf"
#    dest: "{{ supervisor_cfg_dir }}/{{ item }}.conf"
#    state: link
#    force: yes
#  become_user: "{{ supervisor_user }}"
#  with_items:
#    - 'lms'
#    - 'cms'
#  when: not disable_edx_services
#  tags:
#    - install
#    - install:configuration

#- name: "FIX: update supervisor configuration"
#  shell:  "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
#  register: supervisor_update
#  become_user: "{{ supervisor_service_user }}"
#  changed_when: supervisor_update.stdout is defined and supervisor_update.stdout != ""
#  when: not disable_edx_services
#  tags:
#    - manage

#- name: "FIX: Remove and recreate the staticfiles directory so nothing stale can exist"
#  file:
#      path: "{{ edxapp_staticfile_dir }}"
#      state: "{{ item }}"
#      owner: "{{ edxapp_user }}"
#      group: "{{ common_web_group }}"
#      mode:  "0755"
#  when: not devstack
#  with_items: ['absent', 'directory']
#  tags:
#    - gather_static_assets
#    - assets

# Gather assets using paver if possible
#- name: "FIX: gather static assets with paver"
#  command: "{{ COMMON_BIN_DIR }}/edxapp-update-assets"
#  when: not devstack
#  tags:
#    - gather_static_assets
#    - assets

#- name: "FIX: ensure edxapp has started"
#  supervisorctl:
#    name: "{{ item }}"
#    supervisorctl_path: "{{ supervisor_ctl }}"
#    config: "{{ supervisor_cfg }}"
#    state: started
#  become_user: "{{ supervisor_service_user }}"
#  when: not disable_edx_services
#  with_items:
#    - 'lms'
#    - 'cms'
#  tags:
#    - manage

- name: "restart edxapp"
  supervisorctl:
    name: "{{ item }}"
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    state: restarted
  when: edxapp_installed is defined and not disable_edx_services and (install_ibl_modules.changed or edx_db_migrations.changed or activation_email.changed or cms_django_common.changed or cms_django_urls.changed or lms_django_common.changed or lms_django_urls.changed)
  become_user: "{{ supervisor_service_user }}"
  with_items:
    - 'lms'
    - 'cms'
  tags:
    - manage

- name: Manage Callysto edx users
  shell: "{{ edxapp_venv_bin }}/python ./manage.py lms --settings={{ demo_edxapp_settings }} --service-variant lms manage_user {{ item.username}} {{ item.email }} --initial-password-hash {{ item.hashed_password | quote }}{% if item.is_staff %} --staff{% endif %}{% if item.is_superuser %} --superuser{% endif %}"
  args:
    chdir: "{{ demo_edxapp_code_dir }}"
  become_user: "{{ common_web_user }}"
  with_items: "{{ edx_users }}"
  tags:
    - install
    - install:base
