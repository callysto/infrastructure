---
# TODO: merge role dockerspawner into this role?
- name: Manage dockerspawner
  include_role:
    name: dockerspawner

# TODO: merge role jhub-docker-cull into this role?
- name: Manage Jupyterhub Docker Cull script
  pip:
    name: jupyterhub-idle-culler

- name: Get Docker image for JupyterHub containers
  docker_image:
    name: '{{ jupyterhub_docker_container }}'
    source: pull
  when: jupyterhub_spawner in ['dockerspawner', 'syzygyswiftspawner']

# TODO: merge role syzygyauthenticator into this role?
- name: Manage syzygyauthenticator
  include_role:
    name: syzygyauthenticator
  when: jupyterhub_authenticator in ['shib', 'pam', 'dummy', 'dummypw']

- name: Install jhub_shibboleth_auth
  pip:
    name: jhub_shibboleth_auth
  become: yes
  when: jupyterhub_authenticator == 'shib'

- name: Examine groups
  debug:
    msg: "Content of group_names is {{ group_names }}"

- name: Add a jupyter user to run things as
  user:
    name: '{{ jupyterhub_user_name }}'
    uid: '{{ jupyterhub_user_uid }}'

- name: Install pycurl dependencies
  yum:
    name: '{{ item.name }}'
    state: '{{ item.state | default(present) }}'
    update_cache: yes
  with_items:
    - { 'name': 'libcurl-devel', 'state': 'present' }
    - { 'name': 'python3-devel', 'state': 'present' }

- name: Install pycurl
  pip:
    name: pycurl
  environment:
    PYCURL_SSL_LIBRARY: nss

- name: Install Jupyterhub
  pip:
    name:
      - 'jupyterhub{{ jupyterhub_version }}'
      - 'sqlalchemy{{ jupyterhub_sqlalchemy_version | default("") }}'

- name: Install node packages
  yum:
    name: nodejs
    state: present

- name: Install configurable-http-proxy
  npm:
    name: configurable-http-proxy
    state: present
    global: yes
    version: '{{ jupyterhub_chp_version }}'

- name: Create JupyterHub Config Directory
  file:
    path: '{{ jupyterhub_srv_dir }}'
    state: directory
    mode: '0755'

- name: Add Jupyterhub Config
  template:
    src: jupyterhub_config_base.py.j2
    dest: "{{ jupyterhub_srv_dir }}/jupyterhub_config.py"
    mode: 0644
    owner: root
    group: root
  notify:
    - Restart JupyterHub

- name: Jupyterhub Service config
  template:
    src: jupyterhub-env.j2
    dest: /etc/sysconfig/jupyterhub
    mode: 0600
    owner: root
    group: root
  notify:
    - Restart JupyterHub

- name: Jupyterhub Service definition
  template:
    src: jupyterhub.service.j2
    dest: /etc/systemd/system/jupyterhub.service
  notify:
    - Restart JupyterHub
    - Restart CHP

- name: Configurable-HTTP-Proxy Service definition
  template:
    src: configurable-http-proxy.service.j2
    dest: /etc/systemd/system/configurable-http-proxy.service
  notify:
    - Restart CHP

- name: Ensure jupyterhub_notebook_template_dir exists
  file:
    path: "{{ jupyterhub_notebook_template_dir }}"
    state: directory

- name: Copy jupyter notebook template
  template:
    src: "notebooks/notebook.html.j2"
    dest: "{{ jupyterhub_notebook_template_dir }}/notebook.html"

- name: Copy jupyter tree template
  template:
    src: "notebooks/tree.html.j2"
    dest: "{{ jupyterhub_notebook_template_dir }}/tree.html"

- name: Copy jupyter nbgitpuller status template
  template:
    src: "notebooks/status.html.j2"
    dest: "{{ jupyterhub_notebook_template_dir }}/status.html"

- name: Ensure jupyterhub_hub_template_dir exists
  file:
    path: "{{ jupyterhub_hub_template_dir }}"
    state: directory

- name: Copy jupyterhub error template
  template:
    src: "hub-error.html.j2"
    dest: "{{ jupyterhub_hub_template_dir }}/error.html"

- name: Copy jupyterhub not-running error template
  template:
    src: "hub-not-running.html.j2"
    dest: "{{ jupyterhub_hub_template_dir }}/not_running.html"

- name: Copy hub logo
  copy:
    src: "logo.png"
    dest: "{{ jupyterhub_hub_template_dir }}/logo.png"
    owner: root
    group: root
    mode: 0644

- name: Add httpd config for jupyter service
  template:
    src: jupyter-http.conf.j2
    dest: "{{ apache_conf_path }}/jupyter.conf"
    mode: 0644
    owner: root
    group: root
  notify: restart httpd

- name: Start + Enable jupyterhub
  service:
    name: jupyterhub
    state: started
    enabled: yes

- name: Start + Enable Configurable-HTTP-Proxy
  service:
    name: configurable-http-proxy
    state: started
    enabled: yes

#- name: Generate a cleanup_old_accounts.sh script
#  template:
#    src: cleanup_old_accounts.sh.j2
#    dest: /usr/local/bin/cleanup_old_accounts.sh
#    mode: 0750

- name: Jupyterhub archive the data of inactive users to swift
  copy:
    src: cleanup-inactive-accounts.sh
    dest: /usr/bin/cleanup-inactive-accounts.sh
    mode: 0750
    owner: root
    group: root

- name: Install jupyter container renice script
  copy:
    src: container_renice.sh
    dest: /usr/local/bin/container-renice
    owner: root
    group: root
    mode: 0755
