---
## Manages a JuptyerHub installation
- name: Validate hub configuration
  hosts: hub
  become: true
  tasks:
    - name: Ensure CALLYSTO_SSL_CERT_DIRECTORY has a value
      assert:
        that: >-
          callysto_ssl_cert_dir != ""
        msg: "CALLYSTO_SSL_CERT_DIRECTORY is not set. Check the local_vars.yml file."

    - name: Ensure zfs_disk_1 and zfs_disk_2 are set
      assert:
        that: >-
          zfs_disk_1 is defined and zfs_disk_1 != "" and zfs_disk_2 is defined and zfs_disk_2 != ""
        msg: "Must set zfs_disk_1 and zfs_disk_2. This is usually done automatically with Terraform"

    - name: Ensure callysto_ssl_cert_dir is set
      assert:
        that: >-
          callysto_ssl_cert_dir != ""
        msg: "Must set callysto_ssl_cert_dir"

    - name: Ensure either openstack_ephemeral_docker_disk or docker_zfs_pool is set
      assert:
        that: >-
          openstack_ephemeral_docker_disk is defined or docker_zfs_pool is defined
        msg: "Must set either openstack_ephemeral_docker_disk or docker_zfs_pool"

    - name: Ensure either openstack credentials are supplied with syzygyswiftspawner
      assert:
        that: >-
          jupyterhub_spawner != 'syzygyswiftspawner' or
          (jupyterhub_spawner == 'syzygyswiftspawner' and openstack_auth_url is defined)
        msg: "Must supply openstack credentials when using syzygyswiftspawner"

    - name: Ensure callysto-swift is used when syzygyswiftspawner is used
      assert:
        that: >-
          jupyterhub_spawner != 'syzygyswiftspawner' or
          (jupyterhub_spawner == 'syzygyswiftspawner' and jupyterhub_docker_image == 'docker.io/callysto/callysto-swift')
        msg: "Must use callysto-swift image with syzygyswiftspawner"

    - name: Ensure callysto-swift is not used when syzygyswiftspawner not is used
      assert:
        that: >-
          (jupyterhub_spawner == 'syzygyswiftspawner' and jupyterhub_docker_image == 'docker.io/callysto/callysto-swift') or
          jupyterhub_docker_image != 'docker.io/callysto/callysto-swift'
        msg: "Can only use callysto-swift image with syzygyswiftspawner"

    - name: Ensure ssp_multi_salt is set
      assert:
        that: >-
          jupyterhub_authenticator != 'shib' or (ssp_idp_multi_salt is defined and ssp_idp_multi_salt != '')
        msg: "Must set ssp_idp_multi_salt when using shib authenticator"

    - name: Ensure ssp_idp_multi_admin_password is set
      assert:
        that: >-
          jupyterhub_authenticator != 'shib' or (ssp_idp_multi_admin_password is defined and ssp_idp_multi_admin_password != '')
        msg: "Must set ssp_idp_multi_admin_password when using shib authenticator"

    - name: Ensure ssp_refresh_key is set
      assert:
        that: >-
          jupyterhub_authenticator != 'shib' or (ssp_refresh_key is defined and ssp_refresh_key != '')
        msg: "Must set ssp_refresh_key when using shib authenticator"

    - name: Ensure ssp_idp_multi_saml_cert is set
      assert:
        that: >-
          jupyterhub_authenticator != 'shib' or (ssp_idp_multi_saml_cert is defined and ssp_idp_multi_saml_cert != '')
        msg: "Must set ssp_idp_multi_saml_cert when using shib authenticator"

    - name: Ensure ssp_idp_multi_saml_key is set
      assert:
        that: >-
          jupyterhub_authenticator != 'shib' or (ssp_idp_multi_saml_key is defined and ssp_idp_multi_saml_key != '')
        msg: "Must set ssp_idp_multi_saml_key when using shib authenticator"

    - name: Ensure hub_metrics is set
      assert:
        that: >-
          hub_metrics is defined
        msg: "Must set hub_metrics to true or false"

- name: Ensure sudo is configured correctly
  hosts: hub
  become: true
  tasks:
    # Settings are defined in
    # group_vars/<group>/sudo.yml
    - name: Configure sudo
      tags: ["sudo", "always"]
      include_role:
        name: sudo
      vars:
          ansible_ssh_pipelining: no

- name: Install and configure the hub
  hosts: hub
  become: true
  tasks:
    - name: Ensure hostname is set
      tags: ["hostname"]
      include_role:
        name: hostname

    # Add relevant keys to `ssh_public_keys`
    # in either host_vars, group_vars, or local_vars.
    - name: Manage SSH public keys
      tags: ["ssh"]
      include_role:
        name: ssh-public-keys

    # This also installs EPEL
    - name: Ensure base packages are installed
      tags: ["base-packages"]
      include_role:
        name: base-packages

    # This will create and manage a zpool based on
    # `zfs_disk_1` and `zfs_disk_2` defined in local_vars.yml.
    - name: Manage ZFS
      tags: ["zfs"]
      include_role:
        name: zfs

    - name: Configure SELinux
      tags: ["selinux"]
      include_role:
        name: selinux
      vars:
        selinux_policy: targeted
        selinux_state: permissive

    # Enabled services are defined in
    # group_vars/hub/firewalld.yml
    #
    # The jupyterhub role also enables access
    # to `jupyterhub_api_port`.
    - name: Ensure firewalld service is running
      tags: ["firewalld"]
      include_role:
        name: firewalld

    # Configuration is stored in
    # group_vars/<group>/ssh.yml.
    - name: Ensure sshd is installed and running
      tags: ["sshd"]
      include_role:
        name: sshd

    # Configuration is stored in
    # group_vars/<group>/httpd.yml
    - name: Manage Apache
      tags: ["httpd"]
      include_role:
        name: apache

    - name: Manage Python3
      tags: ["python", "python3"]
      include_role:
        name: ius-python3

    # Manage Docker
    - name: Manage Docker
      include_role:
        name: docker

    - name: Add interfaces their respective zones
      firewalld:
        interface: '{{ item.interface }}'
        zone: '{{ item.zone }}'
        state: enabled
        permanent: true
        immediate: yes
      with_items:
        - { interface: '{{ docker_interface }}', zone: 'home' }
      notify:
        firewalld complete reload

    - name: update facts if docker0 is not defined
      action: setup filter="ansible_docker0"
      when: ansible_docker0 is not defined

    - name: Install docker module
      yum:
        name: 'python-docker-py'
        state: 'present'

    - name: Manage Docker storage
      include_role:
        name: docker-storage

    # Manage Jupyterhub
    # This role is tightly coupled to the following roles:
    #   * dockerspawner
    #   * ssp-idp-multi
    #   * callysto-html
    #   * syzygyauthenticator
    # These roles should not be used independently.
    # TODO: merge all of these roles into one?
    - name: Manage Jupyterhub
      tags: ["jupyter", "jupyterhub", "ssp"]
      include_role:
        name: jupyterhub

    - name: Manage rrsync script
      tags: ["ssh", "rrsync", "backup"]
      include_role:
        name: rrsync

    - name: Prometheus node-exporter
      tags: ["stats","prometheus"]
      include_role:
        name: prometheus-node-exporter
      vars:
        prometheus_exporters_common_root_dir: /prometheus/exporters
        prometheus_node_exporter_config_flags:
           'web.listen-address': '127.0.0.1:9100'
           'log.level': 'info'
      when: hub_metrics

    - name: Add file_sd_config from node to stats server
      tags: ["stats","prometheus"]
      include_role:
        name: stats
      when: hub_metrics

    - name: cAdvisor container
      tags: ["stats","prometheus"]
      include_role:
        name: prometheus-cadvisor
      vars:
        prometheus_exporters_common_conf_dir: "/etc/prometheus/exporters"
        prometheus_exporters_common_sd_conf_dir: '{{ prometheus_exporters_common_conf_dir }}'
        prometheus_exporters_common_local_sd_conf_dir: './../roles/internal/stats/files/stats_sd_conf'
      when: hub_metrics
